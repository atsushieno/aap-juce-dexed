diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6a1afa7..1c77076 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -25,11 +25,21 @@ endif()
 #static linking in Windows
 set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
 
+# build settings for JUCEAAP
+add_definitions(
+        -DJUCEAAP_USE_UNIQUE_ID=1
+        -DJUCEAAP_HOSTED_PARAMETER=1
+        -DJUCEAAP_HAVE_AUDIO_PLAYHEAD_NEW_POSITION_INFO=1
+        -DJUCE_PUSH_NOTIFICATIONS_ACTIVITY="com/rmsl/juce/JuceActivity"
+        -DJUCE_PUSH_NOTIFICATIONS=1
+        -DJUCE_USE_ANDROID_OBOE_STABILIZED_CALLBACK=1
+)
+
 # include JUCE *AFTER* the MSVC runtime and so on is set up
 set(DEXED_JUCE_PATH "${CMAKE_SOURCE_DIR}/libs/JUCE" CACHE STRING "Path to JUCE library source tree")
 add_subdirectory(${DEXED_JUCE_PATH} ${CMAKE_BINARY_DIR}/JUCE EXCLUDE_FROM_ALL)
 add_subdirectory(libs/clap-juce-extensions EXCLUDE_FROM_ALL)
-
+message("###### DEXED_JUCE_PATH: ${DEXED_JUCE_PATH}")
 
 
 #Adds all the module sources so they appear correctly in the IDE
diff --git a/Source/CMakeLists.txt b/Source/CMakeLists.txt
index f98357c..58aa07d 100644
--- a/Source/CMakeLists.txt
+++ b/Source/CMakeLists.txt
@@ -29,6 +29,30 @@ juce_add_plugin("${BaseTargetName}"
         DESCRIPTION "Dexed FM Synth"
 )
 
+# begin JUCEAAP specific -->
+include_directories(
+              "${AAP_DIR}/include"
+)
+
+juce_add_module(${AAP_JUCE_DIR}/aap-modules/juceaap_audio_plugin_client)
+
+if (ANDROID)
+
+# dependencies
+find_library(log "log")
+find_library(android "android")
+find_library(glesv2 "GLESv2")
+find_library(egl "EGL")
+set(cpufeatures_lib "cpufeatures")
+set(oboe_lib "oboe")
+set(CMAKE_CXX_FLAGS_RELEASE "-O3")
+
+target_include_directories(${BaseTargetName} PRIVATE
+	"${ANDROID_NDK}/sources/android/cpufeatures")
+
+endif (ANDROID)
+# <-- end JUCEAAP specific
+
 clap_juce_extensions_plugin(TARGET ${BaseTargetName}
         CLAP_ID "com.digital-suburban.dexed"
         CLAP_FEATURES instrument FM DX7)
@@ -110,3 +134,21 @@ PUBLIC
     juce::juce_recommended_config_flags
     juce::juce_recommended_lto_flags
 )
+
+### AAP except for module
+
+target_link_libraries(${BaseTargetName} 
+      PRIVATE
+      juceaap_audio_plugin_client
+)
+
+if(ANDROID)
+target_link_libraries(${BaseTargetName} 
+    PRIVATE
+    ${log}
+    ${android}
+    ${glesv2}
+    ${egl}
+    )
+add_compile_definitions([[JUCE_DONT_AUTO_OPEN_MIDI_DEVICES_ON_MOBILE=1]])
+endif()
diff --git a/Source/CartManager.cpp b/Source/CartManager.cpp
index 3bd0b1b..958be6d 100644
--- a/Source/CartManager.cpp
+++ b/Source/CartManager.cpp
@@ -174,9 +174,10 @@ void CartManager::buttonClicked(juce::Button *buttonThatWasClicked) {
     
     if ( buttonThatWasClicked == loadButton.get() ) {
         FileChooser fc ("Import original DX sysex...", File::getSpecialLocation(File::SpecialLocationType::userDocumentsDirectory), "*.syx;*.SYX;*.*", 1);
-        
-        if ( fc.browseForFileToOpen())
+
+        fc.launchAsync(juce::FileBrowserComponent::openMode, [&](const juce::FileChooser &_fc) {
             mainWindow->loadCart(fc.getResult());
+        });
         return;
     }
     
@@ -228,8 +229,9 @@ void CartManager::fileClicked(const File& file, const MouseEvent& e) {
         }
         menu.addSeparator();
         menu.addItem(1020, "Refresh");
-        
-        switch(menu.show()) {
+
+        menu.showMenuAsync(PopupMenu::Options{}, [=](int result) {
+        switch(result) {
         case 1000:
             file.revealToUser();
             break;
@@ -239,7 +241,7 @@ void CartManager::fileClicked(const File& file, const MouseEvent& e) {
         case 1020:
             cartBrowserList->refresh();
             break;
-        }
+        }});
         return;
     }
 }
@@ -289,7 +291,8 @@ void CartManager::programRightClicked(ProgramListBox *source, int pos) {
     if ( source == activeCart.get() )
         menu.addItem(1010, "Send current sysex cartridge to DX7");
 
-    switch(menu.show())  {
+    menu.showMenuAsync(PopupMenu::Options{}, [&](int result) {
+    switch(result)  {
         case 1000:
             uint8_t unpackPgm[161];
             
@@ -309,7 +312,7 @@ void CartManager::programRightClicked(ProgramListBox *source, int pos) {
         case 1010:
             mainWindow->processor->sendCurrentSysexCartridge();
             break;
-    }
+    }});
 
 }
 
diff --git a/Source/GlobalEditor.cpp b/Source/GlobalEditor.cpp
index 38bc0a4..9ea1345 100644
--- a/Source/GlobalEditor.cpp
+++ b/Source/GlobalEditor.cpp
@@ -651,8 +651,8 @@ void GlobalEditor::buttonClicked (juce::Button* buttonThatWasClicked)
     else if (buttonThatWasClicked == aboutButton.get())
     {
         //[UserButtonCode_aboutButton] -- add your button handler code here..
-        AboutBox about(this->getParentComponent());
-        about.runModalLoop();
+         //AboutBox about(this->getParentComponent());
+         //about.runModalLoop();
         //[/UserButtonCode_aboutButton]
     }
 
@@ -736,7 +736,7 @@ void GlobalEditor::mouseDown(const MouseEvent &e) {
         PopupMenu popup;
         popup.addItem(1, "Send current program to DX7");
 
-        auto p = popup.show();
+        popup.showMenuAsync(PopupMenu::Options{}, [=](int p) {
         switch( p )
         {
         case 1:
@@ -744,7 +744,7 @@ void GlobalEditor::mouseDown(const MouseEvent &e) {
            break;
         default:
             break;
-        }
+        }});
     }
 }
 //[/MiscUserCode]
diff --git a/Source/OperatorEditor.cpp b/Source/OperatorEditor.cpp
index b55d637..08b606d 100644
--- a/Source/OperatorEditor.cpp
+++ b/Source/OperatorEditor.cpp
@@ -580,7 +580,8 @@ void OperatorEditor::mouseDown(const MouseEvent &event) {
         popup.addSeparator();
         popup.addItem(4, "Send current program to DX7");
 
-        switch(popup.show()) {
+        popup.showMenuAsync(PopupMenu::Options{},[&](int result) {
+        switch(result) {
             case 1:
                 processor->copyToClipboard(internalOp);
             break;
@@ -596,7 +597,7 @@ void OperatorEditor::mouseDown(const MouseEvent &event) {
             case 4:
                 processor->sendCurrentSysexProgram();
             break;
-        }
+        }});
 
     }
 }
diff --git a/Source/PluginEditor.cpp b/Source/PluginEditor.cpp
index 4f7d324..be64de9 100644
--- a/Source/PluginEditor.cpp
+++ b/Source/PluginEditor.cpp
@@ -125,10 +125,10 @@ void DexedAudioProcessorEditor::loadCart(File file) {
     }
     
     if ( rc != 0 ) {
-        rc = AlertWindow::showOkCancelBox(AlertWindow::QuestionIcon, "Unable to find DX7 sysex cartridge in file",
+        /*rc = AlertWindow::showOkCancelBox(AlertWindow::QuestionIcon, "Unable to find DX7 sysex cartridge in file",
                                           "This sysex file is not for the DX7 or it is corrupted. "
                                           "Do you still want to load this file as random data ?");
-        if ( rc == 0 )
+        if ( rc == 0 )*/
             return;
     }
     
@@ -145,13 +145,13 @@ void DexedAudioProcessorEditor::saveCart() {
     File startFileName = processor->activeFileCartridge.exists() ? processor->activeFileCartridge : processor->dexedCartDir;
 
     FileChooser fc ("Export DX sysex...", processor->dexedCartDir, "*.syx;*.SYX", 1);
-    if ( fc.browseForFileToSave(true) ) {
+    fc.launchAsync(FileBrowserComponent::saveMode, [=](const FileChooser& fc) {
         if ( ! processor->currentCart.saveVoice(fc.getResults().getReference(0)) ) {
             AlertWindow::showMessageBoxAsync (AlertWindow::WarningIcon,
                                               "Error",
                                               "Unable to write: " + fc.getResults().getReference(0).getFullPathName());
         }
-    }
+    });
 }
 
 void DexedAudioProcessorEditor::tuningShow() {
@@ -285,6 +285,7 @@ void DexedAudioProcessorEditor::rebuildProgramCombobox() {
 }
 
 void DexedAudioProcessorEditor::storeProgram() {
+    /*
     String currentName = Cartridge::normalizePgmName((const char *) processor->data+145);
     Cartridge destSysex = processor->currentCart;
     File *externalFile = NULL;
@@ -383,6 +384,7 @@ void DexedAudioProcessorEditor::storeProgram() {
     if ( externalFile != NULL )
         delete externalFile;
     cartManager.resetActiveSysex();
+    */
 }
 
 class MidiCCListener: public AlertWindow, Value::Listener {
@@ -412,8 +414,10 @@ public :
 };
 
 void DexedAudioProcessorEditor::discoverMidiCC(Ctrl *ctrl) {
+    /*
     MidiCCListener ccListener(this, ctrl);
     ccListener.runModalLoop();
+    */
 }
 
 bool DexedAudioProcessorEditor::isInterestedInFileDrag (const StringArray &files)
diff --git a/Source/PluginParam.cpp b/Source/PluginParam.cpp
index c789ef1..7677e42 100644
--- a/Source/PluginParam.cpp
+++ b/Source/PluginParam.cpp
@@ -294,16 +294,17 @@ void Ctrl::mouseDown(const juce::MouseEvent &event) {
         }
         popup.addItem(2, "Clear midi CC mapping");
 
-        switch(popup.show()) {
+        popup.showMenuAsync(PopupMenu::Options{},[&](int result) {
+        switch(result) {
             case 1:
                 parent->mappedMidiCC.removeValue(this);
                 parent->savePreference();
                 break;
             case 2:
-                if ( AlertWindow::showYesNoCancelBox(AlertWindow::WarningIcon, "Confirm", "Clear midi mapping for all controller change (CC) messages?", "YES", "NO", "CANCEL") ) {
+                //if ( AlertWindow::showYesNoCancelBox(AlertWindow::WarningIcon, "Confirm", "Clear midi mapping for all controller change (CC) messages?", "YES", "NO", "CANCEL") ) {
                     parent->mappedMidiCC.clear();
                     parent->savePreference();
-                }
+                //}
                 break;
             case 3:
                 AudioProcessorEditor *editor = parent->getActiveEditor();
@@ -313,7 +314,7 @@ void Ctrl::mouseDown(const juce::MouseEvent &event) {
                 DexedAudioProcessorEditor *dexedEditor = (DexedAudioProcessorEditor *) editor;
                 dexedEditor->discoverMidiCC(this);
                 break;
-        }
+        }});
     }
 }
 
diff --git a/Source/PluginProcessor.cpp b/Source/PluginProcessor.cpp
index f2c3817..3c17402 100644
--- a/Source/PluginProcessor.cpp
+++ b/Source/PluginProcessor.cpp
@@ -858,11 +858,10 @@ void DexedAudioProcessor::retuneToStandard()
 
 void DexedAudioProcessor::applySCLTuning() {
     FileChooser fc( "Please select an SCL File", File(), "*.scl" );
-    if( fc.browseForFileToOpen() )
-    {
+    fc.launchAsync(juce::FileBrowserComponent::openMode, [&](const juce::FileChooser &_fc) {
         auto s = fc.getResult();
         applySCLTuning(s);
-    }
+    });
 }
 
 void DexedAudioProcessor::applySCLTuning(File s) {
@@ -887,11 +886,10 @@ void DexedAudioProcessor::applySCLTuning(std::string sclcontents) {
 
 void DexedAudioProcessor::applyKBMMapping() {
     FileChooser fc( "Please select an KBM File", File(), "*.kbm" );
-    if( fc.browseForFileToOpen() )
-    {
+    fc.launchAsync(juce::FileBrowserComponent::openMode, [&](const juce::FileChooser &_fc) {
         auto s = fc.getResult();
         applyKBMMapping(s);
-    }
+    });
 }
 
 void DexedAudioProcessor::applyKBMMapping( File s )
Submodule libs/surgesynthteam_tuningui contains modified content
diff --git a/libs/surgesynthteam_tuningui/surgesynthteam_tuningui.h b/libs/surgesynthteam_tuningui/surgesynthteam_tuningui.h
index fa17052..79b104d 100644
--- a/libs/surgesynthteam_tuningui/surgesynthteam_tuningui.h
+++ b/libs/surgesynthteam_tuningui/surgesynthteam_tuningui.h
@@ -179,15 +179,18 @@ public:
     virtual void cellClicked (int rowNumber, int columnId, const juce::MouseEvent & e) override {
         if( e.mods.isRightButtonDown() )
         {
+#if !ANDROID // TODO: implement
             rmbMenu->clear();
             rmbMenu->addItem(1, "Export to CSV" );
             auto result = rmbMenu->show();
             if( result == 1 )
                 exportToCSV();
+#endif
         }
     }
 
     virtual void exportToCSV() {
+#if !ANDROID // TODO: implement
         juce::FileChooser fc( "Export CSV to...", juce::File(), "*.csv" );
         if( fc.browseForFileToSave(true) )
         {
@@ -207,6 +210,7 @@ public:
 
             }
         }
+#endif
     }
        
 
